name: Docker

on:
    release:
        types: [created]
env:
    IMAGE_NAME: disgo-butler

jobs:
    releases:
        name: Release Go Binary
        runs-on: ubuntu-latest
        strategy:
          matrix:
            # build and publish in parallel: linux/386, linux/amd64, windows/386, windows/amd64, darwin/386, darwin/amd64 
            goos: [linux, windows, darwin]
            goarch: ["386", amd64]
        steps:
            - uses: actions/checkout@v2
            - uses: wangyoucao577/go-release-action@v1.15
              with:
                github_token: ${{ secrets.GITHUB_TOKEN }}
                goos: ${{ matrix.goos }}
                goarch: ${{ matrix.goarch }}
                goversion: "https://dl.google.com/go/go1.13.1.linux-amd64.tar.gz"
                extra_files: LICENSE README.md

    push:
        runs-on: ubuntu-latest
        if: github.event_name == 'push'
        steps:
            - uses: actions/checkout@v2

            - name: Build image
              run: docker build . --file Dockerfile --tag $IMAGE_NAME

            - name: Log into registry
              run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

            - name: Push image
              run: |
                  IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
                  IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
                  VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
                  [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
                  [ "$VERSION" == "master" ] && VERSION=latest
                  echo IMAGE_ID=$IMAGE_ID
                  echo VERSION=$VERSION
                  docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
                  docker push $IMAGE_ID:$VERSION
